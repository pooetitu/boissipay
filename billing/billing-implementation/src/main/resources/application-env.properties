##### Kafka configuration #####
spring.kafka.consumer.bootstrap-servers=${KAFKA_HOST}:${KAFKA_PORT}
spring.kafka.processPaymentProducer.bootstrap-servers=${KAFKA_HOST}:${KAFKA_PORT}
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID}
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO_OFFSET_RESET}
# Serializer/Deserializer for kafka
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.processPaymentProducer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.processPaymentProducer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=${WRITE_DATES_AS_TIMESTAMPS}
# Topics
kafka.topic.create-contract=${KAFKA_TOPIC_CREATE_CONTRACT}
kafka.topic.process-payment=${KAFKA_TOPIC_PROCESS_PAYMENT}
kafka.topic.payment-success=${KAFKA_TOPIC_PAYMENT_SUCCESS}
kafka.topic.send-invoice=${KAFKA_TOPIC_SEND_INVOICE}
kafka.topic.invoice-sent=${KAFKA_TOPIC_INVOICE_SENT}
# Repository
spring.datasource.hikari.connectionTimeout=${DATASOURCE_CONNECTION_TIMEOUT}
spring.datasource.hikari.maximumPoolSize=${DATASOURCE_MAXIMUM_POOL_SIZE}
spring.h2.console.enabled=${H2_CONSOLE_ENABLED}
spring.jpa.open-in-view=${JPA_OPEN_IN_VIEW}
spring.jpa.generate-ddl=${JPA_GENERATE_DDL}
spring.datasource.url=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=${JPA_HIBERNATE_DDL_AUTO}